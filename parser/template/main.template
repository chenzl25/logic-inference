#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <vector>
#include "lexer/src/lex.h"
#include "parser/src/yacc.h"
#include "parser/src/slr.h"
#include "parser/src/bnf_rule.h"
#include "parser/src/hardcode.h"
#include "extend/Logic.h"
using namespace std;


int main(int argc, char** argv) {
  string code_path     = "data/logic.code";
  for (int i = 1; i < argc;) {
    if (strcmp(argv[i], "-code") == 0) {
      code_path = argv[i+1];
      i+=2;
    } else {
      i++;
    }
  } 
  Lex mylex;
  mylex.build_from_lex_rules(hard_code_lex_rule());
  /*set-string-type-distincter*/
mylex.set_string_type("string");
mylex.set_string_distincter('\"');
  // if (!mylex.read_code(code_path)) {
  //   error("read code file error");
  // }
  mylex.set_max_token_size(50);

  SLR slr;
  // slr.build_from_bnf_rules(hard_code_bnf_rule());  
  slr.just_read_bnf_rules(hard_code_bnf_rule());
  hard_code_slr_table(slr);
  // slr.parse(mylex);
  Logic::Interpreter::getInstance()->set_lexer(mylex);
  Logic::Interpreter::getInstance()->set_parsr(slr);
  Logic::Interpreter::getInstance()->parse(code_path);
  // Logic::Interpreter::getInstance()->execute();
  // Logic::Interpreter::getInstance()->dealloc();
}
